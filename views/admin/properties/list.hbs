{{!-- Add these styles first --}}
<style>
    .property-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 0.5rem;
    }

    .datatable thead th {
        white-space: nowrap;
    }

    .badge {
        padding: 0.5em 0.75em;
        font-weight: 500;
    }

    .btn-link {
        text-decoration: none;
    }

    .btn-link:hover {
        opacity: 0.8;
    }

    .modal-content {
        border-radius: 0.75rem;
        border: none;
    }

    .modal-header {
        border-bottom: 1px solid rgba(0,0,0,0.1);
    }

    .modal-footer {
        border-top: 1px solid rgba(0,0,0,0.1);
    }
</style>

{{!-- views/admin/properties/list.hbs --}}
<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0 d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">Properties</h6>
                    <a href="/admin/properties/add" class="btn btn-primary btn-sm mb-0">
                        <i class="fas fa-plus"></i> Add Property
                    </a>
                </div>
                <div class="card-body px-0 pt-0 pb-2">
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0 datatable">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        Property
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">
                                        Location
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        Type
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        Status
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        Price
                                    </th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        Action
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each properties}}
                                <tr>
                                    <td>
                                        <div class="d-flex px-3 py-1">
                                            <div>
                                               <img src="{{#if this.images.[0]}}{{this.images.[0]}}{{else}}/images/property-placeholder.jpg{{/if}}" 
     class="property-image me-3" alt="{{this.projectName}}">
                                            </div>
                                            <div class="d-flex flex-column justify-content-center">
                                                <h6 class="mb-0 text-sm">{{this.projectName}}</h6>
                                                <p class="text-xs text-secondary mb-0">ID: {{this._id}}</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <p class="text-sm font-weight-bold mb-0">{{this.location}}</p>
                                        <p class="text-xs text-secondary mb-0">{{this.area}}</p>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="badge badge-sm bg-gradient-info">{{this.propertyType}}</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="badge badge-sm bg-gradient-{{#if (eq this.status 'Ready to Move')}}success{{else if (eq this.status 'Under Construction')}}warning{{else}}primary{{/if}}">
                                            {{this.status}}
                                        </span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <p class="text-sm font-weight-bold mb-0">₹{{this.price}} L</p>
                                        <p class="text-xs text-secondary mb-0">₹{{this.pricePerSqFt}}/sqft</p>
                                    </td>
                                    <td class="align-middle text-center">
                                        <div class="ms-auto">
                                            <a href="/admin/properties/edit/{{this._id}}" class="btn btn-link text-dark px-3 mb-0">
                                                <i class="fas fa-pencil-alt text-dark me-2"></i>Edit
                                            </a>
                                            <a href="javascript:void(0)" class="btn btn-link text-danger px-3 mb-0"
                                               onclick="deleteProperty('{{this._id}}')">
                                                <i class="far fa-trash-alt me-2"></i>Delete
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{{!-- Delete Confirmation Modal --}}
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this property? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>


{{!-- Replace your existing script section with this --}}
<script>


// Initialize DataTable with proper cleanup
function initializeDataTable() {
    if (!$.fn.DataTable) {
        console.error('DataTables is not loaded');
        return;
    }

    // Destroy existing DataTable instance if it exists
    const table = $('.datatable');
    if ($.fn.DataTable.isDataTable(table)) {
        table.DataTable().destroy();
    }

    // Clear any existing event handlers
    table.off('mouseenter mouseleave');

    // Initialize new DataTable
    return table.DataTable({
        order: [[0, 'desc']],
        pageLength: 10,
        responsive: true,
        language: {
            paginate: {
                next: '<i class="fas fa-angle-right"></i>',
                previous: '<i class="fas fa-angle-left"></i>'
            },
            search: "",
            searchPlaceholder: "Search properties...",
            lengthMenu: "Show _MENU_ entries",
            info: "Showing _START_ to _END_ of _TOTAL_ properties",
            infoEmpty: "Showing 0 to 0 of 0 properties",
            infoFiltered: "(filtered from _MAX_ total properties)"
        },
        columnDefs: [
            { orderable: false, targets: -1 } // Disable sorting on action column
        ],
        drawCallback: function() {
            // Reapply hover effects after table redraw
            $('.datatable tbody tr').hover(
                function() { $(this).addClass('bg-light'); },
                function() { $(this).removeClass('bg-light'); }
            );
        }
    });
}

// Delete property function
function deleteProperty(propertyId) {
    if (!propertyId) return;

    Swal.fire({
        title: 'Are you sure?',
        text: "This action cannot be undone",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: `/admin/properties/delete/${propertyId}`,
                method: 'POST',
                beforeSend: function() {
                    Swal.fire({
                        title: 'Deleting...',
                        html: 'Please wait',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    });
                },
                success: function(response) {
                    if (response.status) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: 'Property has been deleted successfully.',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message || 'Failed to delete property'
                        });
                    }
                },
                error: function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to delete property. Please try again.'
                    });
                }
            });
        }
    });
}

// Initialize when document is ready
let dataTable = null;

document.addEventListener('DOMContentLoaded', function() {
    // Check if jQuery is available
    if (!checkJQuery()) {
        console.error('Required libraries are not loaded');
        return;
    }

    // Initialize DataTable and store the instance
    dataTable = initializeDataTable();

    // Handle image error
    $('.property-image').on('error', function() {
        $(this).attr('src', '/images/property-placeholder.jpg');
    });

    // Initialize Bootstrap tooltips (only if needed)
    if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl, {
                trigger: 'hover'
            });
        });
    }
});

// Cleanup function for when the component unmounts or page changes
function cleanup() {
    if (dataTable) {
        dataTable.destroy();
        dataTable = null;
    }
}

// Handle page visibility changes
document.addEventListener('visibilitychange', function() {
    if (document.hidden) {
        cleanup();
    } else {
        if (!dataTable) {
            dataTable = initializeDataTable();
        }
    }
});

// Global function for property deletion
window.deleteProperty = deleteProperty;
</script>
{{!-- Additional styles for better table appearance --}}
<style>
    .datatable tbody tr {
        transition: all 0.2s ease;
    }

    .datatable tbody tr:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .property-image {
        transition: transform 0.2s ease;
    }

    .property-image:hover {
        transform: scale(1.1);
    }

    .badge-sm {
        font-size: 0.75rem;
        padding: 0.35rem 0.65rem;
    }

    .bg-gradient-success {
        background: linear-gradient(45deg, #2dce89, #2dcecc);
    }

    .bg-gradient-warning {
        background: linear-gradient(45deg, #fb6340, #fbb140);
    }

    .bg-gradient-info {
        background: linear-gradient(45deg, #11cdef, #1171ef);
    }

    .bg-gradient-primary {
        background: linear-gradient(45deg, var(--primary-color), var(--dark-color));
    }

    .table-responsive {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    @media (max-width: 768px) {
        .property-image {
            width: 40px;
            height: 40px;
        }
        
        .text-xs {
            font-size: 0.65rem !important;
        }
        
        .text-sm {
            font-size: 0.75rem !important;
        }
    }
</style>